---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: nakama
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 2.4.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      main:
        replicas: 2
        strategy: RollingUpdate
        containers:
          main:
            image:
              repository: registry.heroiclabs.com/heroiclabs/nakama
              tag: 3.20.1
            command: ["/bin/sh"]
            args: ["-ecx", "/nakama/nakama migrate up --database.address $(POSTGRESQL__USER):$(POSTGRESQL__PASSWORD)@$(POSTGRESQL__HOST):5432/$(POSTGRESQL__NAME) && exec /nakama/nakama --name nakama1 --database.address $(POSTGRESQL__USER):$(POSTGRESQL__PASSWORD)@$(POSTGRESQL__HOST):5432/$(POSTGRESQL__NAME) --logger.level DEBUG --session.token_expiry_sec 7200"]
            env:
              POSTGRESQL__HOST:
                secretKeyRef:
                  name: "${APP}-pguser-${DB_USER}"
                  key: host
              POSTGRESQL__NAME:
                secretKeyRef:
                  name: "${APP}-pguser-${DB_USER}"
                  key: dbname
              POSTGRESQL__USER:
                secretKeyRef:
                  name: "${APP}-pguser-${DB_USER}"
                  key: user
              POSTGRESQL__PASSWORD:
                secretKeyRef:
                  name: "${APP}-pguser-${DB_USER}"
                  key: password
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /
                    port: 7350
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            resources:
              requests:
                cpu: 5m
                memory: 10M
        pod:
          securityContext:
            runAsUser: 568
            runAsGroup: 568
    service:
      main:
        ports:
          http:
            port: 7350
    ingress:
      main:
        enabled: true
        className: internal
        annotations:
          external-dns.alpha.kubernetes.io/target: "internal.${SECRET_DOMAIN}"
          hajimari.io/icon: video-input-antenna
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host
